version: '3.4'

services:
  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: sqlserver
    networks:
      - sag
    ports:
      - "1433:1433"
    environment:
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
      - ACCEPT_EULA=Y
    env_file:
      - .env
    volumes:
      - ./sqlserver/data:/var/opt/mssql/data 
      - ./sqlserver/secrets:/var/opt/mssql/secrets

  umserver:
    image: softwareag/universalmessaging-server:10.15
    container_name: umserver
    networks:
      - sag
    ports:
      - "9000:9000"
      - "9200:9200"
    volumes:
      - um-data-volume:/opt/softwareag/UniversalMessaging/server/umserver/data
      - um-conf-volume:/opt/softwareag/common/conf
      - ./license/um-license.xml:/opt/softwareag/UniversalMessaging/server/umserver/licence/licence.xml:ro
    healthcheck:
      interval: 5s
      retries: 12
      test: ["CMD-SHELL", "curl --silent http://localhost:9000/health/ | grep -q '\"ServerStatus\":\"OK\"'"]

  msr:
    container_name: msr
    image: staillansag/stt-demo-ipaas:latest
    depends_on:
      - umserver
      - sqlserver
    networks:
      - sag
    ports:
      - "25555:5555"
    env_file:
      - .env
    volumes:
      - ./license/msr11-license.xml:/opt/softwareag/IntegrationServer/config/licenseKey.xml
      - ./application.properties:/opt/softwareag/IntegrationServer/application.properties:ro
    healthcheck:
      interval: 5s
      retries: 24
      test: ["CMD-SHELL", "curl -o /dev/null -s -w '%{http_code}' http://localhost:5555 | grep -qE '^(200|3[0-9]{2})$'"]

networks:
  sag:

volumes:
  um-data-volume:
  um-conf-volume:
